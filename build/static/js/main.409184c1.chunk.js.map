{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","img/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justfify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","option","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","Button","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.409184c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2qm9l\",\"card\":\"Cards_card__1vDBC\",\"infected\":\"Cards_infected__2KHl0\",\"recovered\":\"Cards_recovered__HZxhI\",\"deaths\":\"Cards_deaths__1Vkmm\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if (!confirmed) {\r\n        return 'loading....';\r\n\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justfify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary gutterBottom\" variant=\"h5\"><b>ႁၼ်ၸိူဝ်ႉမႅင်း(Confirmed)</b></Typography>\r\n                        <Typography variant=\"h5\" color=\"primary\"><CountUp start={0} end={confirmed.value} duration={5.5} separator=\",\"/></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography color=\"textSecondary gutterBottom\" variant=\"h5\">\r\n                        ၵေႃႉ</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary gutterBottom\" variant=\"h5\"><b>ယႃၶႅၼ်း (Recovered)</b></Typography>\r\n                        <Typography variant=\"h5\" color=\"primary\"><CountUp start={0} end={recovered.value} duration={5.5} separator=\",\"/></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography color=\"textSecondary gutterBottom\" variant=\"h5\">ၵေႃႉ</Typography>\r\n                    </CardContent>\r\n                </Grid>              \r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                        <CardContent>\r\n                            <Typography color=\"textSecondary gutterBottom\" variant=\"h5\"><b>လူႉတႆၢ (Deaths)</b></Typography><br></br>\r\n                            <Typography variant=\"h5\" color=\"secondary\"><CountUp start={0} end={deaths.value} duration={5.5} separator=\",\"/></Typography>\r\n                            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                            <Typography color=\"textSecondary gutterBottom\" variant=\"h5\">ၵေႃႉ</Typography>\r\n                        </CardContent>\r\n                    </Grid>\r\n                </Grid>  \r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl= url;\r\n    \r\n    if(country) {\r\n        changeableUrl =`${url}/countries/${country}`\r\n    }\r\n    try {\r\n        const {data: { confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl);\r\n            \r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\nexport const fetchCountries = async()=> {\r\n    try {\r\n        const {data:{countries}} = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n        \r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\n\r\nconst Chart = ({data:{confirmed, recovered, deaths}, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n       \r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length //0\r\n            ? (\r\n                <Line\r\n                    data={{ \r\n                        labels: dailyData.map(({date}) => date),\r\n                        datasets: [{\r\n                            data: dailyData.map(({confirmed}) => confirmed),\r\n                            label: 'ႁၼ်ၸိူဝ်ႉမႅင်:',\r\n                            borderColor: 'blue',\r\n                            fill: true,\r\n                        }, {\r\n                            data: dailyData.map(({recovered}) =>recovered),\r\n                            label: 'ယႃၶႅၼ်း',\r\n                            borderColor: '#00FF00',\r\n                            backgroundColor: 'rgba(255. 0, 0, 0.5)',\r\n                            fill: true,\r\n                        },\r\n                        {\r\n                            data: dailyData.map(({deaths}) => deaths),\r\n                            label: 'လူႉတႆၢ',\r\n                            borderColor: 'red',\r\n                            backgroundColor: 'rgba(255. 0, 0, 0.5)',\r\n                            fill: true,\r\n                        }],\r\n                    }}\r\n                />) : null\r\n    );\r\n    \r\n    console.log(confirmed, recovered, deaths);\r\n\r\n    const barChart= (\r\n        confirmed \r\n        ? (\r\n            <Bar \r\n              data={{\r\n                labels :[ 'ႁၼ်ၸိူဝ်ႉမႅင်:', 'ယႃၶႅၼ်း', 'လူႉတႆၢ'], \r\n                datasets: [{\r\n                    label: 'people',\r\n                    backgroundColor: [\r\n                        'rgb(143, 98, 231)',\r\n                        'rgb(2, 255, 100)',\r\n                        'rgb(255, 18, 16)',\r\n                    ],\r\n                    data:[confirmed.value, recovered.value, deaths.value]\r\n                }]\r\n\r\n              }}\r\n              option={{\r\n                  legend: {display: false},\r\n                  title: { display: true, text:'Current state in ${country}'},\r\n              }}\r\n            />\r\n        ): null\r\n    )\r\n\r\n    return (\r\n    <div className={styles.container}>\r\n        {country ? barChart :lineChart}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from \"../CountryPicker/CountryPicker.module.css\";\r\nimport {fetchCountries} from '../../api';\r\n\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const  [fetchedCountries, setFetchedCountries] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n    }\r\n\r\n    fetchAPI();\r\n\r\n}, [setFetchedCountries]);\r\n\r\nreturn (\r\n    <FormControl className={styles.FormControl}>\r\n        <NativeSelect defaultValue=\"\" onChange={(e)=> handleCountryChange(e.target.value)}>\r\n            <option value=\"\" >ၶၢဝ်ႇ COVID-19 တူဝ်ႈလုမ်ႈၾႃႇ</option>\r\n            <option value=\"Burma\" >မိူင်းႁူမ်ႈတုမ်မၢၼ်ႈ</option>\r\n            {fetchedCountries.map((country, i)=> <option key={i} value={country}>{country}</option>)}\r\n        </NativeSelect>\r\n        \r\n    </FormControl>\r\n    \r\n    \r\n)\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n//import Cards from './components/Cards/Cards';\r\nimport {Cards, Chart, CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\nimport coronaImage from './img/image.png';\r\nimport Button from '@material-ui/core/Button';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data:{},\r\n        country:'',\r\n    }\r\n\r\n  async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({data: fetchedData})\r\n    }\r\n\r\n    handleCountryChange = async (country) =>{\r\n        const fetchedData = await fetchData(country);\r\n\r\n        this.setState({data:fetchedData, country: country});\r\n        //fetch data\r\n        //set the state\r\n    }\r\n    render() {\r\n        const{ data, country} = this.state;\r\n        return (\r\n            <div className={styles.container}>   \r\n                <img className={styles.image} src={coronaImage} alt='Covid-19' />        \r\n                <CountryPicker handleCountryChange={this.handleCountryChange} /><br></br>\r\n                <Cards data={data} />\r\n                \r\n                <Chart data={data} country={country} /><br></br><br></br>     \r\n                <Button variant=\"contained\" color=\"primary\">API + Source Code</Button>\r\n               \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__QS0ml\",\"image\":\"App_image__2uhKA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container___7Pks\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2m4Cs\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}